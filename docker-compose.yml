version: "3.9"

services:
  app:
    build: .
    command: python manage.py runserver 0.0.0.0:${PORT:-8000}
    volumes:
      - .:/app
    ports:
      - ${PORT:-8000}:${PORT:-8000}
    environment: &api-environment
      SECRET_KEY: ${SECRET_KEY:-queenladygaga}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-["*"]}
      DEBUG: ${DEBUG:-true}
      PORT: ${PORT:-8000}
      DB_ENGINE: ${DB_ENGINE:-django.db.backends.postgresql}
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-biodiversity_db}
      DB_USER: ${DB_USER:-denr}
      DB_PASSWORD: ${DB_PASSWORD:-denr}
      EMAIL_BACKEND: ${EMAIL_BACKEND:-django.core.mail.backends.smtp.EmailBackend}
      STATICFILES_STORAGE: ${STATICFILES_STORAGE:-django.contrib.staticfiles.storage.StaticFilesStorage}
      EMAIL_HOST: ${EMAIL_HOST:-mail}
      EMAIL_PORT: ${EMAIL_PORT:-1025}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS:-false}
      USE_S3: ${USE_S3:-false}
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
      AWS_STORAGE_BUCKET_NAME:
    depends_on:
      - db
      - mail

  worker:
    depends_on:
      - app  # just so `app` will be built first, then we can use its image as this service's image
    image: biodiversity-app:latest
    volumes:
      - .:/app
    environment: *api-environment
    command:
      - /bin/sh
      - -c
      - pip install -r requirements.txt
        && celery -A biodiversity worker -B -l INFO

  db:
    image: postgres:13
    volumes:
      - biodiversity_db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME:-biodiversity_db}
      POSTGRES_USER: ${DB_USER:-denr}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-denr}

  mail:
    image: mailhog/mailhog
    ports:
      - 8025:8025

  redis:
    image: redis:6.2.6-alpine
    ports:
      - 6379:6379


volumes:
  biodiversity_db:
